name: Deploy to Development

on:
  push:
    branches: [ dev-release ]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  TERRAFORM_VERSION: 1.5.0

jobs:
  terraform:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    environment: development
    
    defaults:
      run:
        working-directory: terraform/dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -out=tfplan
        env:
          TF_VAR_db_password: ${{ secrets.DEV_DB_PASSWORD }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/dev-release'
        run: terraform apply -auto-approve tfplan

      - name: Output ALB DNS
        if: github.ref == 'refs/heads/dev-release'
        run: |
          echo "ALB DNS Name: $(terraform output -raw alb_dns_name)"
          echo "ALB_DNS_NAME=$(terraform output -raw alb_dns_name)" >> $GITHUB_ENV

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Development environment deployment completed!\n\nALB DNS: ${{ env.ALB_DNS_NAME }}'
            })