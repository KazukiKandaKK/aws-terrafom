name: Terraform Plan

on:
  pull_request:
    branches: [ main, dev-release, stg-release, prod-release ]
    paths:
      - 'terraform/**'
      - 'modules/**'

env:
  AWS_REGION: ap-northeast-1
  TERRAFORM_VERSION: 1.5.0

jobs:
  detect-changes:
    name: Detect Changed Environments
    runs-on: ubuntu-latest
    outputs:
      dev: ${{ steps.filter.outputs.dev }}
      stg: ${{ steps.filter.outputs.stg }}
      prod: ${{ steps.filter.outputs.prod }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            dev:
              - 'terraform/dev/**'
              - 'modules/**'
            stg:
              - 'terraform/stg/**'
              - 'modules/**'
            prod:
              - 'terraform/prod/**'
              - 'modules/**'

  plan-dev:
    name: Plan Development
    needs: detect-changes
    if: needs.detect-changes.outputs.dev == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -no-color
        env:
          TF_VAR_db_password: ${{ secrets.DEV_DB_PASSWORD }}

  plan-stg:
    name: Plan Staging
    needs: detect-changes
    if: needs.detect-changes.outputs.stg == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/stg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -no-color
        env:
          TF_VAR_db_password: ${{ secrets.STG_DB_PASSWORD }}

  plan-prod:
    name: Plan Production
    needs: detect-changes
    if: needs.detect-changes.outputs.prod == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -no-color
        env:
          TF_VAR_db_password: ${{ secrets.PROD_DB_PASSWORD }}